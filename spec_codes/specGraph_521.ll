; ModuleID = '/home/pedro/tcc/benchmark/SPEC_CPU2017/benchspec/CPU/557.xz_r/build/build_base_mytest-m64.0000/liblzma/lzma/specGraph_528.ll'
source_filename = "/home/pedro/tcc/benchmark/SPEC_CPU2017/benchspec/CPU/557.xz_r/build/build_base_mytest-m64.0000/liblzma/lzma/fastpos_tablegen.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [165 x i8] c"/* This file has been automatically generated by fastpos_tablegen.c. */\0A\0A#include \22common.h\22\0A#include \22fastpos.h\22\0A\0Aconst uint8_t lzma_fastpos[1 << FASTPOS_BITS] = {\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%3u\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"\0A};\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = alloca [8192 x i8], align 16
  %2 = getelementptr inbounds [8192 x i8], [8192 x i8]* %1, i64 0, i64 0
  store i8 0, i8* %2, align 16
  %3 = getelementptr inbounds [8192 x i8], [8192 x i8]* %1, i64 0, i64 1
  store i8 1, i8* %3, align 1
  br label %4

4:                                                ; preds = %21, %0
  %.03 = phi i8 [ 2, %0 ], [ %22, %21 ]
  %.02 = phi i32 [ 2, %0 ], [ %.1, %21 ]
  %5 = zext i8 %.03 to i32
  %6 = icmp slt i32 %5, 26
  br i1 %6, label %7, label %23

7:                                                ; preds = %4
  %8 = zext i8 %.03 to i32
  %9 = ashr i32 %8, 1
  %10 = sub nsw i32 %9, 1
  %11 = shl i32 1, %10
  br label %12

12:                                               ; preds = %17, %7
  %.1 = phi i32 [ %.02, %7 ], [ %19, %17 ]
  %.01 = phi i32 [ 0, %7 ], [ %18, %17 ]
  %13 = icmp ult i32 %.01, %11
  br i1 %13, label %14, label %20

14:                                               ; preds = %12
  %15 = zext i32 %.1 to i64
  %16 = getelementptr inbounds [8192 x i8], [8192 x i8]* %1, i64 0, i64 %15
  store i8 %.03, i8* %16, align 1
  br label %17

17:                                               ; preds = %14
  %18 = add i32 %.01, 1
  %19 = add i32 %.1, 1
  br label %12

20:                                               ; preds = %12
  br label %21

21:                                               ; preds = %20
  %22 = add i8 %.03, 1
  br label %4

23:                                               ; preds = %4
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str, i32 0, i32 0))
  br label %25

25:                                               ; preds = %41, %23
  %.0 = phi i64 [ 0, %23 ], [ %42, %41 ]
  %26 = icmp ult i64 %.0, 8192
  br i1 %26, label %27, label %43

27:                                               ; preds = %25
  %28 = urem i64 %.0, 16
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0))
  br label %32

32:                                               ; preds = %30, %27
  %33 = getelementptr inbounds [8192 x i8], [8192 x i8]* %1, i64 0, i64 %.0
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 %35)
  %37 = icmp ne i64 %.0, 8191
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  br label %40

40:                                               ; preds = %38, %32
  br label %41

41:                                               ; preds = %40
  %42 = add i64 %.0, 1
  br label %25

43:                                               ; preds = %25
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0))
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
